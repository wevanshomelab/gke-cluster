apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: drone
  namespace: argocd
spec:
  destination:
    namespace: drone
    server: {{ .Values.spec.destination.server }}
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
  project: cluster-services
  source:
    path: charts/drone
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
    helm:
      parameters:
        - name: drone.ingress.enabled
          value: 'true'
        - name: drone.env.DRONE_SERVER_HOST
          value: drone.{{ .Values.spec.cluster.baseDomain }}
        - name: drone.env.DRONE_SERVER_PROTO
          value: https
        - name: drone-runner-docker.env.DRONE_RPC_HOST
          value: drone.{{ .Values.spec.cluster.baseDomain }}
        - name: drone-runner-docker.env.DRONE_RPC_PROTO
          value: https
        - name: drone.env.DRONE_USER_FILTER
          value: "wevanscfi,wevanshomelab"
        - name: drone.ingress.className
          value: nginx
        - name: drone.ingress.hosts[0].host
          value: drone.{{ .Values.spec.cluster.baseDomain }}
        - name: drone.ingress.hosts[0].paths[0].path
          value: /
        - name: drone.ingress.hosts[0].paths[0].pathType
          value: Prefix
        - name: drone.ingress.tls[0].hosts[0]
          value: drone.{{ .Values.spec.cluster.baseDomain }}
        - name: drone.ingress.tls[0].secretName
          value: drone-tls
        - name: drone.ingress.annotations.cert-manager\.io\/cluster-issuer
          value: letsencrypt
